
name: 'Changelog to Releasenotes'
description: 'Generate release notes from CHANGELOG.md and upload them into github release description'
author: 'kuvaus'


inputs:
  changelog:
    description: 'The input path of the changelog file. Default: `CHANGELOG.md`'
    required: true
    default: 'CHANGELOG.md'
  filtered_changelog:
    description: 'The output path of the release notes file'
    required: true
    default: 'FILTERED_CHANGELOG.md'
  changelog_format:
    description: 'Changelog format, keepachangelog or other'
    required: true
    default: 'keepachangelog'
  start_token:
    description: 'The start tag of the release notes'
    required: true
    default: '## ['
  end_token:
    description: 'The end tag of the release notes'
    required: true
    default: '## ['
  specific_tag:
    description: 'Extract release notes from a specific tag (e.g. v0.1.2) instead of the newest one, default: empty'
    required: false
    default: ''
  use_date:
    description: 'Extract the date to the release notes'
    required: true
    default: 'true'
  upcoming_release:
    description: 'Set this to `true` to get release notes from the [Upcoming] section instead of the first tagged release'
    required: true
    default: 'false'
  create_release:
    description: 'Set this to `true` to make a new release if one does not exist'
    required: true
    default: 'true'
  update_release:
    description: 'Set this to `true` to update a release'
    required: true
    default: 'true'
    
#
# Outputs the release notes in text in here
#

outputs:
  releasenotes:
    description: 'The filtered release notes'

# runs:
#   using: node16
#   main: dist/index.js


# This part is temporary to enable Node 18 support

runs:
  using: composite
  steps:

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version || '18' }}

    - name: Action
      run: |
        node ${{ github.action_path }}/dist/index.js
        echo "::set-output name=releasenotes::value1"
      shell: ${{ (runner.os == 'Windows' && 'pwsh') || 'bash' }}
      env:
        INPUT_CHANGELOG:          ${{ inputs.changelog }}
        INPUT_FILTERED_CHANGELOG: ${{ inputs.filtered_changelog }}
        INPUT_CHANGELOG_FORMAT:   ${{ inputs.changelog_format }}
        INPUT_START_TOKEN:        ${{ inputs.start_token }}
        INPUT_END_TOKEN:          ${{ inputs.end_token }}
        INPUT_SPECIFIC_TAG:       ${{ inputs.specific_tag }}
        INPUT_USE_DATE:           ${{ inputs.use_date }}
        INPUT_UPCOMING_RELEASE:   ${{ inputs.upcoming_release }}
        INPUT_CREATE_RELEASE:     ${{ inputs.create_release }}
        INPUT_UPDATE_RELEASE:     ${{ inputs.update_release }}



